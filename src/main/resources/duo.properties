#
# NanoPi Duo (H2+) v1.0, v1.1, v2.0 GPIO data registers
#
# Elements are arranged in the order they are to be loaded into lists.
#
# Datasheet http://wiki.friendlyarm.com/wiki/images/0/08/Allwinner_H2%2B_Datasheet_V1.2.pdf
#

# Board description
description = NanoPi Duo (H2+) v1.0, v1.1, v2.0
# GPIO device /dev/gpiochip*
gpio.dev = 0, 1
# Start address of each GPIO chip
chips = 0x1c20800, 0x1f02c00
# Chip size (range)
chip.size = 252, 36
# Pin numbers as they are for GPIO device
pins = 4, 5, 11, 12, 13, 14, 15, 16, 198, 199, 203, 3, 11
# Pin to chip mapping
pin.chip = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1
# Pin name
pin.name = GPIOA4, GPIOA5, GPIOA11, GPIOA12, GPIOA13, GPIOA14, GPIOA15, GPIOA16, GPIOG6, GPIOG7, GPIOG11, BUTTON, GPIOL11
# Group to chip mapping
group.chip = 0, 0, 0, 0, 0, 0, 1
# Group name (port name for H2+)
group.name = A, C, D, E, F, G, L
# Data in on register offset
data.in.on.offset = 0x10, 0x58, 0x7c, 0xa0, 0xc4, 0xe8, 0x10
# Data in off register offset
data.in.off.offset = 0x10, 0x58, 0x7c, 0xa0, 0xc4, 0xe8, 0x10
# Data out on register offset
data.out.on.offset = 0x10, 0x58, 0x7c, 0xa0, 0xc4, 0xe8, 0x10
# Data out off register offset
data.out.off.offset = 0x10, 0x58, 0x7c, 0xa0, 0xc4, 0xe8, 0x10
# Use input data register to detect changes
use.input.data.reg = false
# Path MMIO uses
mem.path = /dev/mem
