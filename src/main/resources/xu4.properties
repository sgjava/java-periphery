#
# ODROID XU4 (Samsung Exynos5422) GPIO data registers
#
# Elements are arranged in the order they are to be loaded into lists.
#
# Datasheet https://wiki.odroid.com/odroid-xu4/software/gpio_register_map
#

# Board description
description = ODROID XU4 (Samsung Exynos5422) rev0.1
# GPIO device /dev/gpiochip*
gpio.dev = 26, 28, 32, 2, 3, 4, 35
# Start address of each GPIO chip
chips = 0x14010000, 0x14010000, 0x14010000, 0x13400000, 0x13400000, 0x13400000, 0x03860000
# Chip size (range)
chip.size = 8, 72, 200, 3116, 3144, 3176, 8
# Pin numbers as they are for GPIO device
pins = 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6
# Pin to chip mapping
pin.chip = 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6
# Pin name
pin.name = GPIOA0_0, GPIOA0_1, GPIOA0_2, GPIOA0_3, GPIOA0_4, GPIOA0_5, GPIOA0_6, GPIOA0_7, GPIOA2_0, GPIOA2_1, GPIOA2_2, GPIOA2_3, GPIOA2_4, GPIOA2_5, GPIOA2_6, GPIOA2_7, GPIOB3_0, GPIOB3_1, GPIOB3_2, GPIOB3_3, GPIOB3_4, GPIOB3_5, GPIOB3_6, GPIOB3_7, GPIOX1_0, GPIOX1_1, GPIOX1_2, GPIOX1_3, GPIOX1_4, GPIOX1_5, GPIOX1_6, GPIOX1_7, GPIOX2_0, GPIOX2_1, GPIOX2_2, GPIOX2_3, GPIOX2_4, GPIOX2_5, GPIOX2_6, GPIOX2_7, GPIOX3_0, GPIOX3_1, GPIOX3_2, GPIOX3_3, GPIOX3_4, GPIOX3_5, GPIOX3_6, GPIOX3_7, GPIOZ_0, GPIOZ_1, GPIOZ_2, GPIOZ_3, GPIOZ_4, GPIOZ_5, GPIOZ_6
# Group to chip mapping
group.chip = 0, 1, 2, 3, 4, 5, 6
# Group name
group.name = GPIOA0, GPIOA2, GPIOB3, GPIOX1, GPIOX2, GPIOX3, GPIOZ
# Data in on register offset
data.in.on.offset = 0x04, 0x44, 0xc4, 0x0c24, 0x0c44, 0x0c64, 0x04
# Data in off register offset
data.in.off.offset = 0x04, 0x44, 0xc4, 0x0c24, 0x0c44, 0x0c64, 0x04
# Data out on register offset
data.out.on.offset = 0x04, 0x44, 0xc4, 0x0c24, 0x0c44, 0x0c64, 0x04
# Data out off register offset
data.out.off.offset = 0x04, 0x44, 0xc4, 0x0c24, 0x0c44, 0x0c64, 0x04
# Use input data register to detect changes
use.input.data.reg = false
# Path MMIO uses
mem.path = /dev/mem
